c     
c     Common block for LAPACK work arrays
c
c     Required workspace:
c
c            |                    REAL                  |   INTEGER  | COMPLEX |
c     --------------------------------------------------------------------------
c     DGESDD |               5*N*N+N+9*N                |     8*N    |         |
c     DGELS  |                N+N*BLKSIZ                | 3*N*L+11*N |         |
c     -------------------------------------------------------------------------- 
c
c     N - LKRYL+1
c     S - SMLSIZ (see LAPACK doc)
c     L - NLVL   (see LAPACK doc)
c      

!     load memory controlling variables
!     for the wrapper 
      include 'WRP.inc' 

!---------------------------------------------------------------------- 
!     Arrays for Real Linear-Least-Squares      

!     Memory switch for Linear-Least-Squares
      integer SW_LLS
      parameter (SW_LLS=-1)

c     Length of arrays 
      integer LLS_WRL               ! Work Array Size (Real)
      integer LLS_WIL               ! Work Array Size (Int)

      integer BLKSIZ                   ! See doc.
      parameter (BLKSIZ=64)

      parameter (LLS_WRL=max(SW_LLS*(LKRYL1+LKRYL1*BLKSIZ),1))
      parameter (LLS_WIL=max(SW_LLS*(3*LKRYL1*2+11*LKRYL1),1))  

c     Work arrays
      real    LLS_WORKR(LLS_WRL)
      integer LLS_WORKI(LLS_WIL)
      
!---------------------------------------------------------------------- 
!     Arrays for SVD 

!     Memory switch for SVD
      integer SW_SVD
      parameter (SW_SVD=-1)

c     Length of arrays 
      integer SVD_WRL               ! Work Array Size (Real)
      integer SVD_WIL               ! Work Array Size (Int)
      parameter (SVD_WRL=
     $            max(SW_SVD*(5*LKRYL1**2+LKRYL1+9*LKRYL1),1))
      parameter (SVD_WIL=
     $            max(SW_SVD*(8*LKRYL1),1))

c     Work arrays
      real    SVD_WORKR(SVD_WRL)
      integer SVD_WORKI(SVD_WIL)


!---------------------------------------------------------------------- 
!     Arrays for Real Schur Decomposition 

!     Memory switch for RSCHUR
      integer SW_RSCHUR
      parameter (SW_RSCHUR=1)

c     Length of arrays 
      integer RSCHUR_WRL               ! Work Array Size (Real)
      integer RSCHUR_WBL               ! Work Array Size (Logi)

      parameter (RSCHUR_WRL=max(SW_RSCHUR*(3*LKRYL1),1))
      parameter (RSCHUR_WBL=max(SW_RSCHUR*(LKRYL1),1))  

c     Work arrays
      real    RSCHUR_WORKR(RSCHUR_WRL)
      logical RSCHUR_WORKB(RSCHUR_WBL)

!---------------------------------------------------------------------- 
!     Arrays for Complex Schur Decomposition 

!     Memory switch for CSCHUR
      integer SW_CSCHUR
      parameter (SW_CSCHUR=-1)

c     Length of arrays 
      integer CSCHUR_WRL               ! Work Array Size (Real)
      integer CSCHUR_WCL               ! Work Array Size (Complex)
      integer CSCHUR_WBL               ! Work Array Size (Logi)

      
      parameter (CSCHUR_WCL=max(SW_CSCHUR*(50*LKRYL1),1))
      parameter (CSCHUR_WRL=max(SW_CSCHUR*(LKRYL1),1))
      parameter (CSCHUR_WBL=max(SW_CSCHUR*(LKRYL1),1))  

c     Work arrays
      complex     CSCHUR_WORKC(CSCHUR_WCL)
      real        CSCHUR_WORKR(CSCHUR_WRL)
      logical     CSCHUR_WORKB(CSCHUR_WBL)

!---------------------------------------------------------------------- 
!     Arrays for Double Complex Schur Decomposition 

!     Memory switch for ZSCHUR
      integer SW_ZSCHUR
      parameter (SW_ZSCHUR=1)

c     Length of arrays 
      integer ZSCHUR_WRL               ! Work Array Size (Real)
      integer ZSCHUR_WCL               ! Work Array Size (Complex)
      integer ZSCHUR_WBL               ! Work Array Size (Logi)

      
      parameter (ZSCHUR_WCL=max(SW_ZSCHUR*(50*LKRYL1),1))
      parameter (ZSCHUR_WRL=max(SW_ZSCHUR*(LKRYL1),1))
      parameter (ZSCHUR_WBL=max(SW_ZSCHUR*(LKRYL1),1))  

c     Work arrays
      complex     ZSCHUR_WORKC(ZSCHUR_WCL)
      real        ZSCHUR_WORKR(ZSCHUR_WRL)
      logical     ZSCHUR_WORKB(ZSCHUR_WBL)


!---------------------------------------------------------------------- 
!     Common Blocks
!     Don't really store these arrays for later ...      
!      common /wrprlvec1/ LLS_WORKR,SVD_WORKR,RSCHUR_WORKR
!      common /wrpilvec1/ LLS_WORKI,SVD_WORKI,RSCHUR_WORKB





      
