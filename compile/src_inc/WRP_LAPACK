c     
c     Declaration for LAPACK work arrays

!     load memory controlling variables
!     for the wrapper 
      include 'MFN.inc'

      integer lapkryl,lapkryl1
      parameter (lapkryl  = mfnkryl)  ! We can change this depending on usage
      parameter (lapkryl1 = lapkryl+1)

!     Switches for different arrays
!      1 : Arrays sizes allocated
!     -1 : All array sizes set to 1 to save memory

!     DP - Double Precision
!     SP - Single Precision      

      integer SW_LLS
      parameter (SW_LLS       =-1)! Linear-Least-Squares (DP)
      integer SW_SVD
      parameter (SW_SVD       =-1)! SVD (DP)
      integer SW_RSCHUR
      parameter (SW_RSCHUR    =-1)! Real Schur Decomposition (DP)
      integer SW_CSCHUR
      parameter (SW_CSCHUR    =-1)! Complex Schur Decomposition (SP)
      integer SW_ZSCHUR
      parameter (SW_ZSCHUR    = 1)! Complex Schur Decomposition (DP)
      integer SW_ZGEINV
      parameter (SW_ZGEINV    = 1)! Complex Matrix Inversion (DP)
      integer SW_ZEIG
      parameter (SW_ZEIG      = 1)! Eigenpar Decomposition of complex matrix(DP)


!---------------------------------------------------------------------- 
!     Arrays for Real Linear-Least-Squares      

c     Length of arrays 
      integer LLS_WRL               ! Work Array Size (Real)
      integer LLS_WIL               ! Work Array Size (Int)

      integer BLKSIZ                   ! See doc.
      parameter (BLKSIZ=64)

      parameter (LLS_WRL=max(SW_LLS*(LAPKRYL1+LAPKRYL1*BLKSIZ),1))
      parameter (LLS_WIL=max(SW_LLS*(3*LAPKRYL1*2+11*LAPKRYL1),1))  

c     Work arrays
      real    LLS_WKR(LLS_WRL)
      integer LLS_WKI(LLS_WIL)
      
!---------------------------------------------------------------------- 
!     Arrays for SVD 

c     Length of arrays 
      integer SVD_WRL               ! Work Array Size (Real)
      integer SVD_WIL               ! Work Array Size (Int)

      parameter (SVD_WRL=
     $            max(SW_SVD*(5*LAPKRYL1**2+LAPKRYL1+9*LAPKRYL1),1))
      parameter (SVD_WIL=
     $            max(SW_SVD*(8*LAPKRYL1),1))

c     Work arrays
      real    SVD_WKR(SVD_WRL)
      integer SVD_WKI(SVD_WIL)


!---------------------------------------------------------------------- 
!     Arrays for Real Schur Decomposition 

c     Length of arrays 
      integer RSCHUR_WRL               ! Work Array Size (Real)
      integer RSCHUR_WBL               ! Work Array Size (Logi)

      parameter (RSCHUR_WRL=max(SW_RSCHUR*(3*LAPKRYL1),1))
      parameter (RSCHUR_WBL=max(SW_RSCHUR*(LAPKRYL1),1))  

c     Work arrays
      real    RSCHUR_WKR(RSCHUR_WRL)
      logical RSCHUR_WKB(RSCHUR_WBL)

!---------------------------------------------------------------------- 
!     Arrays for Single Precision Complex Schur Decomposition 

c     Length of arrays 
      integer CSCHUR_WRL               ! Work Array Size (Real)
      integer CSCHUR_WCL               ! Work Array Size (Complex)
      integer CSCHUR_WBL               ! Work Array Size (Logi)
      
      parameter (CSCHUR_WCL=max(SW_CSCHUR*(5*LAPKRYL1),1))
      parameter (CSCHUR_WRL=max(SW_CSCHUR*(LAPKRYL1),1))
      parameter (CSCHUR_WBL=max(SW_CSCHUR*(LAPKRYL1),1))  

c     Work arrays
      complex     CSCHUR_WKC(CSCHUR_WCL)
      real        CSCHUR_WKR(CSCHUR_WRL)
      logical     CSCHUR_WKB(CSCHUR_WBL)

!---------------------------------------------------------------------- 
!     Arrays for Double Precision Complex Schur Decomposition 

c     Length of arrays 
      integer ZSCHUR_WRL               ! Work Array Size (Real)
      integer ZSCHUR_WCL               ! Work Array Size (Complex)
      integer ZSCHUR_WBL               ! Work Array Size (Logi)
      
      parameter (ZSCHUR_WCL=max(SW_ZSCHUR*(5*LAPKRYL1),1))
      parameter (ZSCHUR_WRL=max(SW_ZSCHUR*(LAPKRYL1),1))
      parameter (ZSCHUR_WBL=max(SW_ZSCHUR*(LAPKRYL1),1))  

c     Work arrays
      complex     ZSCHUR_WKC(ZSCHUR_WCL)
      real        ZSCHUR_WKR(ZSCHUR_WRL)
      logical     ZSCHUR_WKB(ZSCHUR_WBL)

!---------------------------------------------------------------------- 
!     Arrays for Double Complex Matrix Inversion
!     ZGETRF - LU Decomposition
!     ZGETRI - Inversion after LU decomposition

!     Note: This one uses GMRKRYL1 for Memory size

c     Length of arrays 
      integer ZGEINV_WCL               ! Work Array Size (Complex)
      integer ZGEINV_WIL               ! Work Array Size (Integer)

      integer ZGEINV_BKSIZ             ! Block Size. Set Arbitrarily for
      parameter (ZGEINV_BKSIZ=16)      ! now
      
      parameter (ZGEINV_WCL=max(SW_ZGEINV*(ZGEINV_BKSIZ*GMRKRYL1),1))
      parameter (ZGEINV_WIL=max(SW_ZGEINV*(GMRKRYL1),1))  

c     Work arrays
      complex     ZGEINV_WKC(ZSCHUR_WCL)
      integer     ZGEINV_WKI(ZSCHUR_WBL)  ! IPIV in documentation

!---------------------------------------------------------------------- 
!     Arrays for Double Precision Eigenpair Decomposition of
!     a complex matrix      

c     Length of arrays 
      integer ZEIG_WRL               ! Work Array Size (Real)
      integer ZEIG_WCL               ! Work Array Size (Complex)
      
      parameter (ZEIG_WRL=max(SW_ZEIG*(2*LAPKRYL1),1))
      parameter (ZEIG_WCL=max(SW_ZEIG*(4*LAPKRYL1),1))

c     Work arrays
      real        ZEIG_WKR(ZEIG_WRL)
      complex     ZEIG_WKC(ZEIG_WCL)

!---------------------------------------------------------------------- 


!---------------------------------------------------------------------- 
!     Common Blocks
!     Don't really store these arrays for later ...      
!      common /wrprlvec1/ LLS_WKR,SVD_WKR,RSCHUR_WKR
!      common /wrpilvec1/ LLS_WKI,SVD_WKI,RSCHUR_WKB





      
